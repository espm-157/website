{"kind":"Notebook","sha256":"8f6b5f2cdd449ab9cbc0d65f81a2a1abbf7c25d231f143edec47e4bb58b1e69f","slug":"ibis-2","location":"/reading/06-ibis-2.ipynb","dependencies":[],"frontmatter":{"title":"ibis Table Joins","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/espm-157/website","exports":[{"format":"ipynb","filename":"06-ibis-2.ipynb","url":"/build/06-ibis-2-115bf8f8950afeb2d1b596dc9734f298.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Learning Goals","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BxnaUqSY4p"}],"identifier":"learning-goals","label":"Learning Goals","html_id":"learning-goals","implicit":true,"key":"KD6lW7d4mS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"use ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"T0CcM4EjdL"},{"type":"inlineCode","value":"join()","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"b5Y88xopoQ"},{"type":"text","value":" to combine two tables on a key column","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bEY8EmFAUw"}],"key":"bL9LC50ea5"}],"key":"yD2clY3PFh"}],"key":"f15IHecR83"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import ibis\nfrom ibis import _\nimport ibis.selectors as s\n\ncon = ibis.duckdb.connect()","key":"DJFawrEYAA"},{"type":"output","id":"Y2k_gHwPzNdzaYPwRZnZv","data":[],"key":"oTd5vx1jIn"}],"key":"oOYGbmw0XK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Last time we started getting comfortable with lazy evaluation (","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QFBlOTDF2E"},{"type":"inlineCode","value":"head()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TvnfhPYB5e"},{"type":"text","value":" and ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cRLMBwx1wh"},{"type":"inlineCode","value":"execute()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jSDQwKZL8E"},{"type":"text","value":") in ibis, and began to learn how to ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mr1VIa5M79"},{"type":"inlineCode","value":"select()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ukDph7fu5Q"},{"type":"text","value":" (subset columns) and  ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tRce9qjBgq"},{"type":"inlineCode","value":"filter()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RPZORiVj9j"},{"type":"text","value":" (subset rows), as well as looking at distinct values. Today we will continue to draw on these skills as we go deeper into the fisheries data in search of the evidence of the North Atlantic Cod collapse.  In the process, we shall pick up some new methods as well.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YcfPsJ8QjY"}],"key":"apfFGeAIcP"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"As before, let’s start with reading in data. Rather than focus on the metrics table, this time we will connect to several tables at the same time.  Note how we can reuse the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hImY7QGols"},{"type":"inlineCode","value":"base_url","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SuYBs6XSJz"},{"type":"text","value":" to avoid extra typing, but take care that we reading the right CSV file in each case! As before, we explicitly set the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"A2vNngoup1"},{"type":"inlineCode","value":"nullstr","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"srXpNBBXnT"},{"type":"text","value":" value as well to ensure missing value codes are correctly interpreted.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tyLBPZjLqy"}],"key":"zcY7R6Xqez"}],"key":"RHwT9pCkbh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"base_url = \"https://huggingface.co/datasets/cboettig/ram_fisheries/resolve/main/v4.65/\"\n\nstock = con.read_csv(base_url + \"stock.csv\", nullstr=\"NA\")\ntimeseries = con.read_csv(base_url + \"timeseries.csv\", nullstr=\"NA\")\nassessment = con.read_csv(base_url + \"assessment.csv\", nullstr=\"NA\")\n","key":"zizZmMT2KT"},{"type":"output","id":"HPyAvNmqEePanzFLBJnet","data":[],"key":"qBnatD4qIJ"}],"key":"xrKlCR45Fa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Fish ‘stocks’","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z9XiORx9FE"}],"identifier":"fish-stocks","label":"Fish ‘stocks’","html_id":"fish-stocks","implicit":true,"key":"gjb2sxkrCU"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Like most real world data science problems, understanding these tables requires both a bit of background in fisheries science and a lot of splunking into the data.  For our purposes, one of the key things you should know is that fisheries are divided into “stocks”, which you can think of as a particular species of fish in a particular area of the ocean. Let’s use the stock table to explore this idea a bit more.  Let’s begin with a peek at the stock table:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kuN6ooDs94"}],"key":"IRC8eNkzwn"}],"key":"Xu9tiVIvH2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"stock","key":"LYWr2rsUmJ"},{"type":"output","id":"sWS1JRnijHRQV6IIHy-YD","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/html":{"content":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">DatabaseTable: ibis_read_csv_5sjnrevlzzaijnrmxgnnonpheq\n  stockid         string\n  tsn             int64\n  scientificname  string\n  commonname      string\n  areaid          string\n  stocklong       string\n  region          string\n  primary_country string\n  primary_FAOarea int64\n  ISO3_code       string\n  GRSF_uuid       string\n  GRSF_areaid     string\n  inmyersdb       int64\n  myersstockid    string\n  state           string\n</pre>\n","content_type":"text/html"},"text/plain":{"content":"DatabaseTable: ibis_read_csv_5sjnrevlzzaijnrmxgnnonpheq\n  stockid         string\n  tsn             int64\n  scientificname  string\n  commonname      string\n  areaid          string\n  stocklong       string\n  region          string\n  primary_country string\n  primary_FAOarea int64\n  ISO3_code       string\n  GRSF_uuid       string\n  GRSF_areaid     string\n  inmyersdb       int64\n  myersstockid    string\n  state           string","content_type":"text/plain"}}}],"key":"VGF0eY7q4N"}],"key":"EwxLEwDP0D"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ah! ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FsAsGrmh0F"},{"type":"inlineCode","value":"commonname","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x0Ikj0jcYQ"},{"type":"text","value":" looks like a good place as any to go looking for Atlantic cod.  Of course if we knew (or looked up) the scientific name of the species, that might be even better -- after all, common names are not always as precise.  Let’s see what we can find:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DvVo8og9we"}],"key":"wtpAfqCkwM"}],"key":"UoKquZt6jF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"(stock\n .filter(_.commonname == \"Atlantic cod\")\n .select(_.stockid, _.scientificname, _.commonname, \n         _.areaid, _.region, _.primary_country, _.ISO3_code)\n .head()\n .execute()\n)","key":"T0MYwObx12"},{"type":"output","id":"Q2-cCI8I8Sp4w0Ei1pPCj","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>stockid</th>\n      <th>scientificname</th>\n      <th>commonname</th>\n      <th>areaid</th>\n      <th>region</th>\n      <th>primary_country</th>\n      <th>ISO3_code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>COD1ABCDE</td>\n      <td>Gadus morhua</td>\n      <td>Atlantic cod</td>\n      <td>multinational-ICES-1ABCDE</td>\n      <td>Canada East Coast</td>\n      <td>Greenland</td>\n      <td>GRL</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>COD1F-XIV</td>\n      <td>Gadus morhua</td>\n      <td>Atlantic cod</td>\n      <td>multinational-ICES-1F-XIV</td>\n      <td>Europe non EU</td>\n      <td>Greenland</td>\n      <td>GRL</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>COD1IN</td>\n      <td>Gadus morhua</td>\n      <td>Atlantic cod</td>\n      <td>multinational-ICES-1IN</td>\n      <td>Canada East Coast</td>\n      <td>Greenland</td>\n      <td>GRL</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>COD2J3KL</td>\n      <td>Gadus morhua</td>\n      <td>Atlantic cod</td>\n      <td>Canada-DFO-2J3KL</td>\n      <td>Canada East Coast</td>\n      <td>Canada</td>\n      <td>CAN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>COD3M</td>\n      <td>Gadus morhua</td>\n      <td>Atlantic cod</td>\n      <td>multinational-NAFO-3M</td>\n      <td>Canada East Coast</td>\n      <td>Portugal</td>\n      <td>PRT</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"     stockid scientificname    commonname                     areaid  \\\n0  COD1ABCDE   Gadus morhua  Atlantic cod  multinational-ICES-1ABCDE   \n1  COD1F-XIV   Gadus morhua  Atlantic cod  multinational-ICES-1F-XIV   \n2     COD1IN   Gadus morhua  Atlantic cod     multinational-ICES-1IN   \n3   COD2J3KL   Gadus morhua  Atlantic cod           Canada-DFO-2J3KL   \n4      COD3M   Gadus morhua  Atlantic cod      multinational-NAFO-3M   \n\n              region primary_country ISO3_code  \n0  Canada East Coast       Greenland       GRL  \n1      Europe non EU       Greenland       GRL  \n2  Canada East Coast       Greenland       GRL  \n3  Canada East Coast          Canada       CAN  \n4  Canada East Coast        Portugal       PRT  ","content_type":"text/plain"}}}],"key":"moUtKod6oF"}],"key":"VtRuv1Yj0V"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Lots of stocks of Atlantic cod!  Each row begins with a unique ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ag4gd7Yr2i"},{"type":"inlineCode","value":"stockid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Gn3M5GtluA"},{"type":"text","value":".  A column that uniquely identifies each row in a given table is often referred to as the “primary key” for that table (and is often but not necessarily listed first).\nThe rows that follow give us some sense of what defines a “stock” as a species in an area: we see a few different identifiers for the species: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"faFuLTUJ0Y"},{"type":"inlineCode","value":"commonname","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o5goywYD92"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CeAosz4b6C"},{"type":"inlineCode","value":"scientificname","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HSy5tyRU34"},{"type":"text","value":".\nWe also see information abot the area the stock occurs in -- such as areaid, region, and primary country.  (For display purposes we selected only a subset of columns).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TM1vMsfeqC"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YZQLbmksiP"},{"type":"text","value":"While we have found the Cod, we haven’t yet found any data about the cod catch over time!  For that we will need to look in the timeseries data.  Let’s see how it is organized:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jqOJWVaXtI"}],"key":"DLLEE8Witf"}],"key":"itkDklTTaN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"timeseries.head().execute()","key":"B57qKo9ddj"},{"type":"output","id":"06Rff-Ms5ufJukAehb8g7","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>assessid</th>\n      <th>stockid</th>\n      <th>stocklong</th>\n      <th>tsid</th>\n      <th>tsyear</th>\n      <th>tsvalue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ABARES-BGRDRSE-1960-2011-CHING</td>\n      <td>BGRDRSE</td>\n      <td>Blue grenadier Southeast Australia</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1960</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ABARES-BGRDRSE-1960-2011-CHING</td>\n      <td>BGRDRSE</td>\n      <td>Blue grenadier Southeast Australia</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1961</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ABARES-BGRDRSE-1960-2011-CHING</td>\n      <td>BGRDRSE</td>\n      <td>Blue grenadier Southeast Australia</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1962</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ABARES-BGRDRSE-1960-2011-CHING</td>\n      <td>BGRDRSE</td>\n      <td>Blue grenadier Southeast Australia</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1963</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ABARES-BGRDRSE-1960-2011-CHING</td>\n      <td>BGRDRSE</td>\n      <td>Blue grenadier Southeast Australia</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1964</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"                         assessid  stockid  \\\n0  ABARES-BGRDRSE-1960-2011-CHING  BGRDRSE   \n1  ABARES-BGRDRSE-1960-2011-CHING  BGRDRSE   \n2  ABARES-BGRDRSE-1960-2011-CHING  BGRDRSE   \n3  ABARES-BGRDRSE-1960-2011-CHING  BGRDRSE   \n4  ABARES-BGRDRSE-1960-2011-CHING  BGRDRSE   \n\n                            stocklong             tsid  tsyear  tsvalue  \n0  Blue grenadier Southeast Australia  CdivMEANC-ratio    1960      NaN  \n1  Blue grenadier Southeast Australia  CdivMEANC-ratio    1961      NaN  \n2  Blue grenadier Southeast Australia  CdivMEANC-ratio    1962      NaN  \n3  Blue grenadier Southeast Australia  CdivMEANC-ratio    1963      NaN  \n4  Blue grenadier Southeast Australia  CdivMEANC-ratio    1964      NaN  ","content_type":"text/plain"}}}],"key":"cguZDFIXho"}],"key":"aGrlHvKCHV"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We again have a column called ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pnVOFKEate"},{"type":"inlineCode","value":"stockid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D8hXv34kop"},{"type":"text","value":". While we no longer have columns such as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pPDZnYdYae"},{"type":"inlineCode","value":"commonname","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Sj4f6k9Jq1"},{"type":"text","value":" or ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vMLZY8hBVA"},{"type":"inlineCode","value":"scientificname","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eSHWS7Lzjx"},{"type":"text","value":" to tell us what species each row in the timeseries is measuring, we now know that we can look up that information in the stock table using the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JVnYWCsnln"},{"type":"inlineCode","value":"stockid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nQbtQRxQhd"},{"type":"text","value":". Such a column is often called a “foreign key”, because it matches the primary key of a separate table.  (it appears the timeseries data has no ‘primary key’ of it’s own -- no column that has a unique value for each row.). Rather than have to switch back and forth between two tables, we can ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"amsuieboDK"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"join","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LatBfhMYyt"}],"key":"T5gN9eJXdD"},{"type":"text","value":" the two tables on ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E64YXhFr7D"},{"type":"inlineCode","value":"stockid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yomn5rBrmj"},{"type":"text","value":":","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Uye3LLfpAf"}],"key":"TJkzL8g0s3"}],"key":"O8T4sQBrCn"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"(stock\n .filter(_.commonname == \"Atlantic cod\")\n .join(timeseries, \"stockid\")\n .head()\n .select(_.stockid, _.scientificname, _.tsid, _.tsyear, \n         _.tsvalue, _.stocklong, _.stocklong_right) # subset of columns to keep display narrow\n .execute()\n)\n","key":"WsUKgKz0HN"},{"type":"output","id":"in_aDxdNPeU6saQI-d0wJ","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"6a95128b834b43918c0246f23663774f\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"FloatProgress(value=0.0, layout=Layout(width='auto'), style=ProgressStyle(bar_color='black'))","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>stockid</th>\n      <th>scientificname</th>\n      <th>tsid</th>\n      <th>tsyear</th>\n      <th>tsvalue</th>\n      <th>stocklong</th>\n      <th>stocklong_right</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>COD4VsW</td>\n      <td>Gadus morhua</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1958</td>\n      <td>0.997804</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>COD4VsW</td>\n      <td>Gadus morhua</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1959</td>\n      <td>1.706091</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>COD4VsW</td>\n      <td>Gadus morhua</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1960</td>\n      <td>1.308003</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>COD4VsW</td>\n      <td>Gadus morhua</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1961</td>\n      <td>1.713846</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>COD4VsW</td>\n      <td>Gadus morhua</td>\n      <td>CdivMEANC-ratio</td>\n      <td>1962</td>\n      <td>1.685411</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n      <td>Atlantic cod Eastern Scotian Shelf</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"},"text/plain":{"content":"   stockid scientificname             tsid  tsyear   tsvalue  \\\n0  COD4VsW   Gadus morhua  CdivMEANC-ratio    1958  0.997804   \n1  COD4VsW   Gadus morhua  CdivMEANC-ratio    1959  1.706091   \n2  COD4VsW   Gadus morhua  CdivMEANC-ratio    1960  1.308003   \n3  COD4VsW   Gadus morhua  CdivMEANC-ratio    1961  1.713846   \n4  COD4VsW   Gadus morhua  CdivMEANC-ratio    1962  1.685411   \n\n                            stocklong                     stocklong_right  \n0  Atlantic cod Eastern Scotian Shelf  Atlantic cod Eastern Scotian Shelf  \n1  Atlantic cod Eastern Scotian Shelf  Atlantic cod Eastern Scotian Shelf  \n2  Atlantic cod Eastern Scotian Shelf  Atlantic cod Eastern Scotian Shelf  \n3  Atlantic cod Eastern Scotian Shelf  Atlantic cod Eastern Scotian Shelf  \n4  Atlantic cod Eastern Scotian Shelf  Atlantic cod Eastern Scotian Shelf  ","content_type":"text/plain"}}}],"key":"rIeGfEvXkN"}],"key":"Dol13MiBzp"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Effectively all this has done is take our timeseries table and for each stockid, add extra columns explaining what the stock table tells us about the stockid - species names, areas, and so on. The join has made our data is much wider than before -- we have all the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mwmwV7augC"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"columns","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eMaeHwdgZ1"}],"key":"uAJ9sMzSGp"},{"type":"text","value":" from ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hIBDeaR0R3"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"both","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NLIilLg3o8"}],"key":"FKHIT8J2Sc"},{"type":"text","value":" tables.  (Note that both tables happened to have one column with the same name, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XuHN8wkLvK"},{"type":"inlineCode","value":"stocklong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wNzLY3JBI4"},{"type":"text","value":".  A truly tidy database would not have done this -- we can easily see that this information belongs in the stock table.  Because our database cannot assume these are the same when we join, it has renamed the one on the “right” (from timeseries) as “stocklong_right” to distinguish them).  Because each ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"atJtuI4ulS"},{"type":"inlineCode","value":"stockid","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aLpolXxqoh"},{"type":"text","value":" was repeated in the timeseries table, now all this other information is repeated too.  This is not as inefficient as it may sound, thanks to internal optimizations in the database.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dyJigisPkU"}],"key":"eHxcbhz70o"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"While it is clear even from this ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yiu7GIqVHg"},{"type":"inlineCode","value":"head()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"x9j2BCPdpK"},{"type":"text","value":" preview that we have the columns from both tables, what about the rows?  Our stock table was already filtered to a subset of rows containing only Cod stocks.  This join (technically called an “inner join”) has kept only those ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gqoT6S6byO"},{"type":"inlineCode","value":"stockid","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SjwiEBYlVB"},{"type":"text","value":"s, so we now have timeseries only about Cod!  In fact, we could have instead joined the full tables for all stock ids, and then applied the filter for ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"I0Q6NHjVgv"},{"type":"inlineCode","value":"commonname","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uCDPzhSmMr"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HuEY41TR4w"}],"key":"X9JW0FWF2m"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Exercise","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GqRnulVN5l"}],"identifier":"exercise","label":"Exercise","html_id":"exercise","implicit":true,"key":"q2ufSSukwN"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Try further exploring this resulting table using ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xUCTFW4WEo"},{"type":"inlineCode","value":"select()","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TSGRIzTy0S"},{"type":"text","value":" and ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"B82tzM8ZOk"},{"type":"inlineCode","value":"distinct()","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Fwe9qXiMLT"},{"type":"text","value":" to get a better sense of what rows are here.  You will notice additional “*id” columns, like ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Bep6yCu7Vk"},{"type":"inlineCode","value":"asssesid","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"p8jNB87PiO"},{"type":"text","value":" or ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"pJgKpRxjy0"},{"type":"inlineCode","value":"areaid","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ldhaPlfyCq"},{"type":"text","value":" matching other tables in the data.  Explore filtering and joinging with these tables as well.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rAHx9vRFxv"}],"key":"U0IoIgR7lz"}],"key":"Epmu9r0Xcw"}],"key":"ATdsRcmcMw"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"ibis Single Table Verbs","url":"/ibis-1","group":"Textbook"},"next":{"title":"ibis mutates and aggregates","url":"/ibis-3","group":"Textbook"}}},"domain":"http://localhost:3000"}